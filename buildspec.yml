version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo "Installing AWS Session Manager Plugin..."
      - sudo yum install -y https://s3.amazonaws.com/session-manager-downloads/plugin/latest/linux_64bit/session-manager-plugin.rpm
      - session-manager-plugin --version

      - echo "Fetching secrets from Parameter Store..."
      - echo "Creating necessary directories..."
      - mkdir -p .platform/nginx/conf.d      # Nginx 설정 디렉토리 생성
      - mkdir -p .platform/hooks/postdeploy  # Hook 스크립트 디렉토리 생성
      - mkdir -p /opt/elasticbeanstalk/hooks/postdeploy  # Elastic Beanstalk의 postdeploy Hook 실행 디렉토리 생성

      # Nginx 설정 다운로드
      - aws ssm get-parameter --name "/platform_nginx_conf" --query "Parameter.Value" --output text | sed 's/\\n/\n/g' > .platform/nginx/conf.d/custom.conf
      - echo "Checking nginx.conf content:"
      - cat .platform/nginx/conf.d/custom.conf
      - if [ -s .platform/nginx/conf.d/custom.conf ]; then echo "nginx.conf downloaded successfully."; else echo "Failed to download nginx.conf."; exit 1; fi
      - chmod 644 .platform/nginx/conf.d/custom.conf

      # Procfile 다운로드
      - aws ssm get-parameter --name "/Procfile" --query "Parameter.Value" --output text > Procfile
      - if [ -s Procfile ]; then echo "Procfile downloaded successfully."; else echo "Failed to download Procfile."; exit 1; fi

      # Hook 스크립트 다운로드 및 실행 위치 이동
      - aws ssm get-parameter --name "/platform_postdeploy_hook" --query "Parameter.Value" --output text | sed 's/\\n/\n/g' > .platform/hooks/postdeploy/99_apply_nginx_config.sh
      - if [ -s .platform/hooks/postdeploy/99_apply_nginx_config.sh ]; then echo "Hook script downloaded successfully."; else echo "Failed to download hook script."; exit 1; fi
      - chmod +x .platform/hooks/postdeploy/99_apply_nginx_config.sh

      # Elastic Beanstalk이 실행하는 위치로 Hook 복사
      - cp .platform/hooks/postdeploy/99_apply_nginx_config.sh /opt/elasticbeanstalk/hooks/postdeploy/
      - chmod +x /opt/elasticbeanstalk/hooks/postdeploy/99_apply_nginx_config.sh

      - ls -aR .platform

  pre_build:
    commands:
      - echo "Preparing for build..."
      - chmod +x ./gradlew

      # 환경 변수 설정
      - export DB_HOST=$DB_HOST
      - export DB_PORT=$DB_PORT
      - export DB_USERNAME=$DB_USERNAME
      - export DB_PASSWORD=$DB_PASSWORD
      - export DB_NAME=$DB_NAME
      - export EC2_HOST=$EC2_HOST
      - export AWS_ACCESS_KEY=$AWS_ACCESS_KEY
      - export AWS_BUCKET=$AWS_BUCKET
      - export AWS_REGION=$AWS_REGION
      - export AWS_SECRET_KEY=$AWS_SECRET_KEY
      - export JWT_SECRET=$JWT_SECRET

      # SSH 터널링 설정 (RDS 접근용)
      - echo "Setting up SSH tunnel..."
      - aws ssm start-session --target $EC2_HOST --document-name AWS-StartPortForwardingSession --parameters '{"portNumber":["3306"],"localPortNumber":["3306"]}' & sleep 10

  build:
    commands:
      - echo "Building the application with Gradle..."
      - ./gradlew build -x test
      - echo "Renaming the built JAR file..."
      - mv build/libs/songyeoin-backend-0.0.1-SNAPSHOT.jar application.jar

  post_build:
    commands:
      - echo "Build completed on `date`"

      # 필요한 파일들이 존재하는지 확인
      - echo "Checking if application.jar exists..."
      - if [ -f application.jar ]; then echo "application.jar found."; else echo "application.jar not found!"; exit 1; fi
      - if [ -f Procfile ]; then echo "Procfile found."; else echo "Procfile missing!"; exit 1; fi
      - if [ -s .platform/nginx/conf.d/custom.conf ]; then echo "nginx.conf found."; else echo "nginx.conf missing!"; exit 1; fi
      - if [ -s .platform/hooks/postdeploy/99_apply_nginx_config.sh ]; then echo "Hook script exists."; else echo "Hook script not found!"; exit 1; fi

      - echo "Ensuring all files are ready for deployment..."
      - ls -l application.jar Procfile
      - ls -aR .platform

      # Elastic Beanstalk 인스턴스에서 실행할 Hook 스크립트가 설정을 적용하도록 수정
      - echo "Skipping direct Nginx configuration in CodeBuild (Handled by Hook in Elastic Beanstalk)..."

      # 배포 ZIP 파일 생성
      - echo "Creating deployment ZIP file..."
      - zip -r deployment.zip application.jar Procfile .platform
      - echo "Checking ZIP file contents..."
      - unzip -l deployment.zip

artifacts:
  files:
    - application.jar
    - Procfile
    - .platform/**/*
  discard-paths: no
