application:
  name: SongyeoinBackendApplication

server:
  port: ${PORT:8080}
  error:
    include-message: always
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
  tomcat:
    normalize-requests: true  # 중복 슬레시 자동 정리
  ssl:
    enabled: false  #https 적용하면서 막아놓기


spring:
  config:
    import: optional:file:.env[.properties]
  web:
    resources:
      add-mappings: false

  datasource:
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=Asia/Seoul
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect

  thymeleaf:
    enabled: true
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML5
    cache: false

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB


management:
  endpoint:
    health:
      show-details: ALWAYS

logging:
  level:
    com.syi.project.journal.controller: INFO    # 컨트롤러는 INFO 레벨
    com.syi.project.journal.service: DEBUG      # 서비스는 DEBUG 레벨
    org.springframework: INFO
    com.ict: DEBUG

jwt:
  secret: ${JWT_SECRET} # Base64 인코딩된 시크릿 키
  accessTokenValidity: 1800000 # Access Token 유효시간 (30분)
  refreshTokenValidity: 604800000 # Refresh Token 유효시간 (7일)

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}    # 팀에서 공유하는 IAM 사용자 키
      secret-key: ${AWS_SECRET_KEY}    # 팀에서 공유하는 IAM 시크릿 키
    s3:
      bucket: ${AWS_BUCKET}       # 버킷 이름
    region:
      static: ${AWS_REGION}         # 서울 리전
    stack:
      auto: false

  # 파일 업로드 용량 제한 설정
  spring:
    servlet:
      multipart:
        max-file-size: 10MB        # 파일 하나의 최대 크기
        max-request-size: 10MB     # 요청당 최대 크기

public:
  api:
    service-key: ${PUBLIC_API_SERVICE_KEY}  # 공휴일 api

app:
  developer-api:
    key: ${DEVELOPER_API_KEY} # 고객센터 개발팀답변 api

discord:
  bot:
    token: ${DISCORD_TOKEN}
    dev-channel-id: ${DEV_CHANNEL_ID} # 디스코드봇 설정

attendance:
  network:
    allowed-ip-1: ${MY_IP1}  # 개인 ip1
    allowed-ip-2: ${MY_IP2}  # 개인 ip2
    allowed-ip-3: ${MY_IP3}  # 개인 ip3
    allowed-ip-4: ${MY_IP4}  # 개인 ip4